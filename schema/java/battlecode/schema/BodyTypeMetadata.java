// automatically generated by the FlatBuffers compiler, do not modify

package battlecode.schema;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

/**
 * Metadata about all bodies of a particular type.
 */
@SuppressWarnings("unused")
public final class BodyTypeMetadata extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_2_0_0(); }
  public static BodyTypeMetadata getRootAsBodyTypeMetadata(ByteBuffer _bb) { return getRootAsBodyTypeMetadata(_bb, new BodyTypeMetadata()); }
  public static BodyTypeMetadata getRootAsBodyTypeMetadata(ByteBuffer _bb, BodyTypeMetadata obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public BodyTypeMetadata __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte type() { int o = __offset(4); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public int buildCostAd() { int o = __offset(6); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public int buildCostMn() { int o = __offset(8); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public int buildCostEx() { int o = __offset(10); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public int actionCooldown() { int o = __offset(12); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public int movementCooldown() { int o = __offset(14); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public int health() { int o = __offset(16); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public int actionRadiusSquared() { int o = __offset(18); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public int visionRadiusSquared() { int o = __offset(20); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public int bytecodeLimit() { int o = __offset(22); return o != 0 ? bb.getInt(o + bb_pos) : 0; }

  public static int createBodyTypeMetadata(FlatBufferBuilder builder,
      byte type,
      int buildCostAd,
      int buildCostMn,
      int buildCostEx,
      int actionCooldown,
      int movementCooldown,
      int health,
      int actionRadiusSquared,
      int visionRadiusSquared,
      int bytecodeLimit) {
    builder.startTable(10);
    BodyTypeMetadata.addBytecodeLimit(builder, bytecodeLimit);
    BodyTypeMetadata.addVisionRadiusSquared(builder, visionRadiusSquared);
    BodyTypeMetadata.addActionRadiusSquared(builder, actionRadiusSquared);
    BodyTypeMetadata.addHealth(builder, health);
    BodyTypeMetadata.addMovementCooldown(builder, movementCooldown);
    BodyTypeMetadata.addActionCooldown(builder, actionCooldown);
    BodyTypeMetadata.addBuildCostEx(builder, buildCostEx);
    BodyTypeMetadata.addBuildCostMn(builder, buildCostMn);
    BodyTypeMetadata.addBuildCostAd(builder, buildCostAd);
    BodyTypeMetadata.addType(builder, type);
    return BodyTypeMetadata.endBodyTypeMetadata(builder);
  }

  public static void startBodyTypeMetadata(FlatBufferBuilder builder) { builder.startTable(10); }
  public static void addType(FlatBufferBuilder builder, byte type) { builder.addByte(0, type, 0); }
  public static void addBuildCostAd(FlatBufferBuilder builder, int buildCostAd) { builder.addInt(1, buildCostAd, 0); }
  public static void addBuildCostMn(FlatBufferBuilder builder, int buildCostMn) { builder.addInt(2, buildCostMn, 0); }
  public static void addBuildCostEx(FlatBufferBuilder builder, int buildCostEx) { builder.addInt(3, buildCostEx, 0); }
  public static void addActionCooldown(FlatBufferBuilder builder, int actionCooldown) { builder.addInt(4, actionCooldown, 0); }
  public static void addMovementCooldown(FlatBufferBuilder builder, int movementCooldown) { builder.addInt(5, movementCooldown, 0); }
  public static void addHealth(FlatBufferBuilder builder, int health) { builder.addInt(6, health, 0); }
  public static void addActionRadiusSquared(FlatBufferBuilder builder, int actionRadiusSquared) { builder.addInt(7, actionRadiusSquared, 0); }
  public static void addVisionRadiusSquared(FlatBufferBuilder builder, int visionRadiusSquared) { builder.addInt(8, visionRadiusSquared, 0); }
  public static void addBytecodeLimit(FlatBufferBuilder builder, int bytecodeLimit) { builder.addInt(9, bytecodeLimit, 0); }
  public static int endBodyTypeMetadata(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public BodyTypeMetadata get(int j) { return get(new BodyTypeMetadata(), j); }
    public BodyTypeMetadata get(BodyTypeMetadata obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

